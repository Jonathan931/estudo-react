{"version":3,"sources":["components/layout/SignedInLink.js","store/actions/authActions.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/Signin.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","href","profile","initials","SignedOutLinks","state","firebase","links","uid","SignedInLink","SignedOutLink","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorlastName","createdAt","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorLastName","Signin","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","SignIn","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20fa5a25.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { signOut } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\n\nconst SignedInLinks = ( props ) =>{\n  return(\n   <ul className=\"right\">\n    <li><NavLink to='/create'>New Project</NavLink></li>\n    <li><a onClick={props.signOut} href='/'>Log Out</a></li>\n    <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials || 'MP'}</NavLink></li>\n   </ul>\n  )\n}\n\nconst mapDispatchToProps = ( dispatch ) =>{\n  return{\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps) (SignedInLinks);","export const signIn = ( credentials ) =>{\n  return (dispatch, getState, {getFirebase}) =>{\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() =>{\n      dispatch({ type: 'LOGIN_SUCESS' })\n    }).catch((err) =>{\n      dispatch({type: 'LOGIN_ERROR', err});\n    })\n\n  }\n}\n\nexport const signOut = () =>{\n  return (dispatch, getState, {getFirebase} ) =>{\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = ( newUser ) =>{\n  return (dispatch, getState, {getFirebase, getFirestore} ) =>{\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password,\n    ).then( (resp)=>{\n      return firestore.collection(\"users\").doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName:  newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then( () =>{\n      dispatch({ type : \"SIGNUP_SUCCESS\"  })\n    }).catch(err =>{\n      dispatch({ type: \"SIGNUP_ERROR\", err})\n    })\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () =>{\n  return(\n   <ul className=\"right\">\n    <li><NavLink to='/signup'>Signup</NavLink></li>\n    <li><NavLink to='/signin'>Login</NavLink></li>\n   </ul>\n  )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLink';\nimport SignedOutLinks from './SignedOutLink';\nimport { connect } from 'react-redux';\n\nconst Navbar = ( props ) =>{\n  const { auth, profile }= props;\n  const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n  return(\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n        { links }\n\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state)=>{\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = ( props ) =>{\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">\n            Notifications\n          </span>\n          <ul className=\"notifications\">\n            {notifications && notifications.map( ( item ) =>{\n              return (\n                <li key={item.id}>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ( {project} ) =>{\n  return(\n    <div className=\"card z-depth-0 project-summary\">\n    <div className=\"card-content grey-text text-darken-3\">\n      <span className=\"card-title\">{project.title}</span>\n      <p>Posted by {project.authorFirstName} {project.authorlastName}</p>\n      <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n    </div>\n  </div>\n  )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ( { projects } ) =>{\n  return(\n    <div className=\"project-list section\">\n      {projects && projects.map( project =>{\n        return (\n          <Link to={`/project/${project.id}`} key={project.id} >\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render(){\n    const { projects, auth, notifications } = this.props;\n    if ( !auth.uid )return <Redirect to='/signin'/>\n    \n    return(\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects}/>\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n          \n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ( state ) =>{\n  return{\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: [ 'time', 'desc' ]}\n  ])\n)(Dashboard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if ( !auth.uid )return <Redirect to='/signin'/>\n\n  if( project ){\n    return(\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }else{\n    return(\n      <div className=\"container center\">\n        <p>Loadin project...</p>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = ( state, ownProps ) =>{\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n) (ProjectDetails);\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass Signin extends Component {\n\n  state = {\n    email: '',\n    password: '',\n  }\n\n  render() {\n    const { authError, auth } = this.props;\n    if ( auth.uid )return <Redirect to='/'/>\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n\n           <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-fied\">\n            <button className=\"btn pink lighten-1 z-depth-0\">\n              Login\n            </button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p>: null}\n            </div>\n          </div>\n\n        </form>\n      </div>\n    )\n  }\n\n  handleChange = (e) =>{\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n\n}\n\nconst mapStateToProps = (state) =>{\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if ( auth.uid )return <Redirect to='/'/>\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n\n           <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-fied\">\n            <button className=\"btn pink lighten-1 z-depth-0\">\n              Sign Up\n            </button>\n          </div>\n\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p>: null}\n          </div>\n          \n        </form>\n      </div>\n    )\n  }\n\n  handleChange = (e) =>{\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n\n}\n\nconst mapStateToProps = (state) =>{\n  return{\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = ( dispatch ) =>{\n  return{\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp); ","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n\n  state = {\n    title: '',\n    content: '',\n  }\n\n  render() {\n    const {auth} = this.props;\n    if ( !auth.uid )return <Redirect to='/signin'/>\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n\n           <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n          </div>\n\n          <div className=\"input-fied\">\n            <button className=\"btn pink lighten-1 z-depth-0\">\n              Create\n            </button>\n          </div>\n\n        </form>\n      </div>\n    )\n  }\n\n  handleChange = (e) =>{\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n\n}\nconst mapStateToProps = (state) =>{\n  return{\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","\nexport const createProject = ( project ) =>{\n\n  return ( dispatch, getState, { getFirebase, getFirestore } ) =>{\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    //console.log(profile, authorId);\n    firestore.collection('projects').add({ \n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then( () =>{\n      dispatch({ type: 'CREATE_PROJECT', project })\n    }).catch((err)=>{\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n    }); \n    \n  }\n\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/Signin';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\n  authError: null\n}\n\nconst authReducer = ( state= initState, action ) =>{\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCESS':\n      console.log('Login sucess');\n      return{\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout sucess');\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log('signup sucess');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log('signup error',  action.err.message);\n      return{\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","const initState={\n  projects:[\n    { id: '1', title: 'help me find peach', content: 'blah blah blah' } ,\n    { id: '2', title: 'collect all the start', content: 'blah blah blah' },\n    { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' },\n  ]\n}\n\nconst projectReducer = ( state= initState, action ) =>{\n  switch (action.type){\n    case 'CREATE_PROJECT':\n      console.log('create project', action.project);\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error', action.err);\n      return state;\n    default: \n      return state;\n  }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({ \n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n })\n\n export default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar config = {\n  apiKey: \"AIzaSyBPOAz1SHFp99ghGM7aJ33eEQxyAH2kUSE\",\n  authDomain: \"marioplan-808b1.firebaseapp.com\",\n  databaseURL: \"https://marioplan-808b1.firebaseio.com\",\n  projectId: \"marioplan-808b1\",\n  storageBucket: \"marioplan-808b1.appspot.com\",\n  messagingSenderId: \"822075331431\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true })\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}), \n    reduxFirestore(fbConfig)\n  )\n);\nstore.firebaseAuthIsReady.then(() =>{\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}